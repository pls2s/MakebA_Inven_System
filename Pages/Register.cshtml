@page
@model MakebA_Inven_System.Pages.RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="register-container">
    <div class="register-header">
        <h2>Create Your Account</h2>
    </div>

    <div class="register-form">
        @if (!string.IsNullOrEmpty(Model.Message))
        {
            <div class="alert @(Model.Message.Contains("successful") ? "alert-success" : "alert-danger")">
                @Model.Message
            </div>
        }
        @if (TempData["ShowPopup"] != null && (bool)TempData["ShowPopup"])
        {
            <script>
                window.onload = function () {
                    showSuccessPopup();  // Show the popup
                };
            </script>
        }
        <!-- Registration Success Pop-up -->
        <div id="success-popup">
            <div class="popup-content">
                <h3>Registration successful!</h3>
                <p>Go to the login page?</p>
                <button onclick="goToLogin()">Yes</button> <!-- Keep only Yes button -->
            </div>
        </div>


        <form method="post" id="register-form" class="register-form">
            <!-- First Name -->
            <div class="form-group">
                <label asp-for="Input.FirstName">First Name</label>
                <input asp-for="Input.FirstName" class="form-control" placeholder="Enter your first name"
                       pattern="[A-Za-z]+" title="Only letters are allowed." oninput="validateField(this)" required />
                <span class="text-danger"></span>
            </div>

            <!-- Last Name -->
            <div class="form-group">
                <label asp-for="Input.LastName">Last Name</label>
                <input asp-for="Input.LastName" class="form-control" placeholder="Enter your last name"
                       pattern="[A-Za-z]+" title="Only letters are allowed." oninput="validateField(this)" required />
                <span class="text-danger"></span>
            </div>

            <!-- Username -->
            <div class="form-group">
                <label asp-for="Input.Username">Username</label>
                <input asp-for="Input.Username" class="form-control" placeholder="Choose a username" maxlength="20"
                       pattern="^(?![0-9]+$)[A-Za-z0-9]+$"
                       title="Username must contain at least one letter, and cannot be only numbers."
                       oninput="validateField(this)" required />
                <span class="text-danger"></span>
            </div>

            <!-- Email -->
            <div class="form-group">
                <label asp-for="Input.Email">Email</label>
                <input asp-for="Input.Email" type="email" class="form-control" id="email"
                       placeholder="Enter your email"
                       pattern="^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$"
                       title="Please enter a valid email address (e.g., user@example.com)."
                       oninput="validateField(this)" required />
                <span class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Input.Phone">Phone</label>
                <input asp-for="Input.Phone" class="form-control" placeholder="Enter your phone number"
                       pattern="^\d+$" maxlength="15" 
                       title="Phone number must contain only numbers." 
                       oninput="validatePhoneNumber(this)" required />
                <span asp-validation-for="Input.Phone" class="text-danger"></span>
            </div>
            <!-- Department -->
            <div class="form-group">
                <label asp-for="Input.Department">Department</label>
                <select asp-for="Input.Department" class="form-select" required>
                    <option value="" disabled selected>Select your department</option>
                    <option value="Sales Department 1">Sales Department 1</option>
                    <option value="Sales Department 2">Sales Department 2</option>
                    <option value="Sales Department 3">Sales Department 3</option>
                    <option value="Inventory Department">Inventory Department</option>
                </select>
                <span class="text-danger"></span>
            </div>

            <!-- Password -->
            <div class="form-group">
                <label asp-for="Input.Password">Password</label>
                <input asp-for="Input.Password" type="password" class="form-control" placeholder="Enter your password"
                       title="Password must contain at least 1 uppercase, 1 lowercase letter, 1 number, 1 special character, and be 8-20 characters long."
                       oninput="checkPasswordStrength(this)" required />
                <span class="text-danger"></span>
            </div>

            <!-- Confirm Password -->
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <input asp-for="Input.ConfirmPassword" type="password" class="form-control" placeholder="Re-enter your password"
                       oninput="validatePasswordMatch()" required />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            <!-- Actions -->
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Register</button>
                <a href="/Index" class="btn btn-secondary">Home</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Validate individual fields
        function validateField(input) {
            const errorMessage = input.nextElementSibling;
            if (!input.checkValidity()) {
                errorMessage.textContent = input.title || "Invalid input.";
            } else {
                errorMessage.textContent = "";
            }
        }

        // Show success popup
        function showSuccessPopup() {
            document.getElementById("success-popup").style.display = "block";
        }

        // Close the success popup
        function closePopup() {
            document.getElementById("success-popup").style.display = "none";
        }

        // Redirect to Login page when "Yes" is clicked
        function goToLogin() {
            window.location.href = "/Login";
        }

        // Check if passwords match
        function validatePasswordMatch() {
            const password = document.querySelector('[asp-for="Input.Password"]').value;
            const confirmPassword = document.querySelector('[asp-for="Input.ConfirmPassword"]').value;
            const errorMessage = document.querySelector('[asp-for="Input.ConfirmPassword"]').nextElementSibling;

            if (confirmPassword && password !== confirmPassword) {
                errorMessage.textContent = "Passwords do not match.";
            } else {
                errorMessage.textContent = "";
            }
        }

        // Check password strength
        function checkPasswordStrength(input) {
            const errorMessage = input.nextElementSibling;
            const password = input.value;

            let message = '';
            if (!/[A-Z]/.test(password)) {
                message += 'Password must contain at least 1 uppercase letter. ';
            }
            if (!/[a-z]/.test(password)) {
                message += 'Password must contain at least 1 lowercase letter. ';
            }
            if (!/\d/.test(password)) {
                message += 'Password must contain at least 1 number. ';
            }
            if (!/[!@@#$%^&*(),.?":{}|<>]/.test(password)) {
                message += 'Password must contain at least 1 special character. ';
            }
            if (password.length < 8 || password.length > 20) {
                message += 'Password must be between 8 and 20 characters long. ';
            }
            if (message) {
                errorMessage.textContent = message;
                errorMessage.style.display = 'block';
            } else {
                errorMessage.textContent = '';
                errorMessage.style.display = 'none';
            }
        }

        // Function to validate the phone number field
        function validatePhoneNumber(input) {
            const errorMessage = input.nextElementSibling;
            const phoneRegex = /^\d+$/; // Only digits allowed

            if (!phoneRegex.test(input.value)) {
                errorMessage.textContent = "Phone number can only contain numbers.";
                input.style.borderColor = "red"; // Highlight the input field
            } else if (input.value.length > 15) {
                errorMessage.textContent = "Phone number cannot exceed 15 digits.";
                input.style.borderColor = "red";
            } else {
                errorMessage.textContent = ""; // Clear the error message if valid
                input.style.borderColor = ""; // Reset the input border
            }
        }

        // Attach the validation function to the phone number field
        document.addEventListener("DOMContentLoaded", () => {
            const phoneInput = document.querySelector('[asp-for="Input.Phone"]');
            if (phoneInput) {
                phoneInput.addEventListener("input", () => validatePhoneNumber(phoneInput));
            }
        });

    </script>
}

<style>
    /* เพิ่มสีสำหรับข้อความแจ้งเตือนเมื่ออีเมลซ้ำ */
    .text-danger.email-error {
        color: #e53e3e; /* สีแดงที่ใช้สำหรับอีเมลที่มีอยู่แล้ว */
        font-size: 0.85rem;
        margin-top: 5px;
        display: block;
    }


    /* เพิ่มสีแดงสำหรับข้อความแจ้งเตือน */
    .alert-danger {
        background-color: #e53e3e; /* สีแดง */
        color: #fff;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 20px;
        font-size: 1rem;
    }
    /* ป๊อปอัพ */
    /* ป๊อปอัพ */
#success-popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 450px;
    background-color: #2d3748; /* สีพื้นหลังที่เข้ากับธีม */
    color: #f4f4f4; /* ตัวอักษรสีขาว */
    border-radius: 12px;
    box-shadow: 0px 4px 25px rgba(0, 0, 0, 0.4); /* เงา */
    z-index: 1000;
    display: none;
    text-align: center;
    padding: 30px 40px;
    animation: fadeIn 0.3s ease-out; /* เพิ่มการเคลื่อนไหว */
}


/* ปุ่ม Yes */
.popup-content button {
    margin-top: 20px;
    padding: 15px 30px;  /* ขนาดปุ่มที่ใหญ่ขึ้น */
    border-radius: 10px;
    background-color: #38a169; /* สีเขียวสด */
    color: #fff;
    font-size: 1.2rem; /* ขนาดฟอนต์ที่ใหญ่ขึ้น */
    border: none;
    cursor: pointer;
    transition: all 0.3s ease-in-out; /* ให้มีการเคลื่อนไหว */
    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2); /* เพิ่มเงา */
}

.popup-content button:hover {
    background-color: #2f855a; /* สีเมื่อ hover */
    box-shadow: 0px 6px 18px rgba(0, 0, 0, 0.3); /* เงาเข้มขึ้น */
    transform: scale(1.05); /* ขยายขนาดปุ่มเล็กน้อย */
}

.popup-content button:focus {
    outline: none;
}

/* ข้อความในป๊อปอัพ */
.popup-content h3 {
    font-size: 1.5rem;
    font-weight: bold;
    color: #63b3ed; /* สีฟ้าอ่อนสำหรับข้อความหัวข้อ */
}

.popup-content p {
    font-size: 1rem;
    color: #cbd5e0; /* สีเทาอ่อนสำหรับข้อความรายละเอียด */
    margin-bottom: 20px;
}


    body {
        margin: 0;
        padding: 0;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background: linear-gradient(135deg, #1f2937, #3b536d);
        font-family: 'Arial', sans-serif;
        color: #f4f4f4;
    }

    
    /* For the register container to handle overflow */
    .register-container {
        width: 100%;
        max-width: 700px;
        max-height: 90vh; /* Limit the height to 90% of the viewport */
        overflow-y: auto; /* Enable vertical scrolling */
        padding: 30px;
        background: #1e293b;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    }

    /* Customize scrollbar appearance */
    .register-container::-webkit-scrollbar {
        width: 10px; /* Width of the scrollbar */
    }

    .register-container::-webkit-scrollbar-thumb {
        background-color: #3b82f6; /* Scrollbar color */
        border-radius: 10px; /* Round edges */
        border: 2px solid #1e293b; /* Padding around scrollbar */
    }

        .register-container::-webkit-scrollbar-thumb:hover {
            background-color: #2563eb; /* Scrollbar color on hover */
        }

    .register-container::-webkit-scrollbar-track {
        background-color: #374151; /* Scrollbar track background */
        border-radius: 10px; /* Round edges for track */
    }


    .register-header h2 {
        font-size: 2.5rem;
        color: #3b82f6;
        text-align: center;
        margin-bottom: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control,
    .form-select {
        width: 100%;
        padding: 12px;
        border: 1px solid #4b5563;
        border-radius: 8px;
        background: #374151;
        color: #f4f4f4;
        font-size: 1rem;
        box-sizing: border-box;
        height: 45px;
        margin-bottom: 10px;
    }

    .text-danger {
        color: red;
        font-size: 0.85rem;
        margin-top: 5px;
        display: block;
    }

    .form-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .btn {
        padding: 12px 24px;
        font-size: 1rem;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s;
    }

    .btn-primary {
        background: #3b82f6;
        color: white;
    }

    .btn-primary:hover {
        background: #2563eb;
    }

    .btn-secondary {
        background: #6b7280;
        color: white;
    }

    .btn-secondary:hover {
        background: #4b5563;
    }
</style>
